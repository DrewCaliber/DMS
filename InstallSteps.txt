https://alpinelinux.org/downloads/
https://dl-cdn.alpinelinux.org/alpine/v3.21/releases/x86/alpine-standard-3.21.3-x86.iso

Install steps here are a little half ass. YT video maybe coming soon idk. Ignore any YAMS commands, this version doesn't use YAMS. Just reference the pictures.

1. Do a standard setup with setup-alpine, but DO NOT create an additional user when prompted. The script relies on the fact that it's 1. Ran as root. And 2. That it's creating the first user.

Made and tested with Alpine Linux 3.21.3

2. Terminal:
apk add git
git clone https://github.com/DrewCaliber/DMS /tmp/dms
sh /tmp/dms/arrpine.sh

Follow the prompts, then:

3. Setup the user for Portainer - It times out, so just reboot if it does. Reboot command is just reboot. IPs and ports should have been given at the end of install. If not, then all containers use the default ports anyways. i.e. Google "Portainer default port", etc.

4. Setup qBittorrent (There's a bad step in the guide, the downloads should go into /data/downloads - NOT /data/downloads/torrents/) (Also ignore the YAMS commands, they're irrelevant, just follow the pictures).
https://yams.media/config/qbittorrent/#setting-up-qbittorrent
Ignore the "Final VPN Check" YAMS commands do not apply here, just the app setup pictures.

You'll also want to add the docker containers to the "Bypass authentication for clients in whitelisted IP subnets" under WebUI.
Usually they're under the "172.18.0.0/24" network. Check Portainer > Containers to be sure. Sometimes they'll fall under "192.168.1.0/24", or even 172.16.0.0/24. Pay close attention or Decluttarr will cry trying to use qBittorrent.

5. Setup Radar (Store the API key in a notepad, you'll need it later).
https://yams.media/config/radarr/

We also don't use SABnzbd. Paying for things isn't the true way. ;)

6. Setup Sonarr (Store the API key in a notepad, you'll need it later).
https://yams.media/config/sonarr/

Once again SABnzbd bad. Defeats the purpose imo.

7. Setup Prowlarr
Before you follow the guide, go to Settings > Indexer > Add > Add FlareSolver. Tags: flaresolverr Host: http://flaresolverr:8191/ > Test > Save

If you get a "CloudFlare blah blah" when testing an Indexer, then add the flaresolverr tag.
https://yams.media/config/prowlarr/

For my Indexers, I usually filter Language to en-AU, en-GB, en-US - Privacy to Public, and Categories to Movies, TV. Then run down the list and add any that work.

8. Setup Bazarr
https://yams.media/config/bazarr/

9. Setup Jellyfin
https://yams.media/config/jellyfin/

10. Setup Jellyseerr - No guide here, good luck, it's not hard.
http://IPADDR:5055

11. Once you're done, grab all the API keys for Radar, Sonarr, Lidarr (Optional), and Readarr (Optional).

Edit the .env in /opt/dms/

Add the API keys. Reboot the server. Reboot command is just reboot.

12. Setup Homarr at your leisure.

Total Stack:

======================================
      DMS Setup Complete!
======================================

Access your media server services:

Jellyfin:     http://IPADDR:8096
Sonarr:       http://IPADDR:8989
Radarr:       http://IPADDR:7878
Lidarr:       http://IPADDR:8686
Readarr:      http://IPADDR:8787
Bazarr:       http://IPADDR:6767
Prowlarr:     http://IPADDR:9696
qBittorrent:  http://IPADDR:8081
Portainer:    http://IPADDR:9000
Jellyseerr:   http://IPADDR:5055
Homarr:       http://IPADDR:7575

Enjoy your new media server!
====================================

To check VPN Function, copy and paste this into console:
echo "Host IP: $(wget -qO- https://api.ipify.org)" && echo "qBittorrent/VPN IP: $(docker exec gluetun wget -qO- https://api.ipify.org)" && echo "VPN Working: $([ "$(wget -qO- https://api.ipify.org)" != "$(docker exec gluetun wget -qO- https://api.ipify.org)" ] && echo "YES - IPs are different ✅" || echo "NO - Same IP address ❌")"

